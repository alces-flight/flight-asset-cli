#!/usr/bin/env ruby
#==============================================================================
# Copyright (C) 2019-present Alces Flight Ltd.
#
# This file is part of Flight Asset.
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which is available at
# <https://www.eclipse.org/legal/epl-2.0>, or alternative license
# terms made available by Alces Flight Ltd - please direct inquiries
# about licensing to licensing@alces-flight.com.
#
# Flight Asset is distributed in the hope that it will be useful, but
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
# IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS
# OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A
# PARTICULAR PURPOSE. See the Eclipse Public License 2.0 for more
# details.
#
# You should have received a copy of the Eclipse Public License 2.0
# along with Flight Asset. If not, see:
#
#  https://opensource.org/licenses/EPL-2.0
#
# For more information on Flight Asset, please visit:
# https://github.com/alces-flight/alces-flight/flight-asset-cli
#==============================================================================

# Sets up bundler
ENV['BUNDLE_GEMFILE'] ||= File.join(__dir__, '../Gemfile')
require 'rubygems'
require 'bundler'
Bundler.setup(:default)

# Load the config file
# NOTE: Moving this file name to *-with-config makes the  first postional
# argument the config path
args = ARGV.dup
if /.*-with-config\Z/.match? __FILE__
  module FlightAsset; end
  class FlightAsset::Config < Hash; end
  FlightAsset::Config.const_set('PATH', args.shift)
end
require_relative '../lib/flight_asset/config'

# Require gems in development mode
if FlightAsset::Config::CACHE.development?
  Bundler.setup(:default, :development)
  require 'pry'
  require 'pry-byebug'
end

# Display the help by default
args << '--help' if args.empty?

# Selects the CLI components
parts = [:shared]
if FlightAsset::Config::CACHE.configured?
  parts << :main
end
if FlightAsset::Config::CACHE.development?
  parts << :development
end

# Builds and runs the CLI
require_relative '../lib/flight_asset/cli'
FlightAsset::CLI.build(*parts).run!(*args)

